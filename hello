import nltk
from nltk.corpus import wordnet
from nltk import word_tokenize
nltk.download('punkt')

import string
def removePunct(text):
  translator=str.maketrans("","",string.punctuation)
  return text.translate(translator)
  
text=removePunct(text)
text=text.lower()
text=text.replace('’',"").replace('—',"")

nltk.download('stopwords')
from nltk.corpus import stopwords
words=word_tokenize(text)
clean_words=[]
for i in words:
  if i not in stopwords.words('english'):
    clean_words.append(i)
    
emotion_word=[]
with open('/content/emotion.txt') as file:
  for i in file:
    j=i.replace("\n","").strip().replace("'","").replace(",","").replace("-","")
    word,emotion=j.split(":")
    if word in clean_words:
      emotion_word.append(word)
      
from typing import Counter
w=Counter(emotion_word)
w

from nltk.sentiment import SentimentIntensityAnalyzer
nltk.download('vader_lexicon') 
def getSentiments(text):
  return SentimentIntensityAnalyzer().polarity_scores(text)

score=getSentiments(text)
# plotting counter
import matplotlib.pyplot as plt
fix,ax=plt.subplots()
ax.bar(w.keys(),w.values()) #plotting counter scores
plt.show()

def get_emotions(wordsss):
  return SentimentIntensityAnalyzer().polarity_scores(wordsss)

sentiment_score=get_emotions(text)
fig,ax=plt.subplots()
ax.bar(sentiment_score.keys(),sentiment_score.values())
plt.show()
